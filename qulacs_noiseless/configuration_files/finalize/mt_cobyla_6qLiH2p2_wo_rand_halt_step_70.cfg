[general]
episodes = 50000

[env]
num_qubits = 6
num_layers = 70
fn_type = incremental_with_fixed_ends
accept_err = 5e-3
err_mitig = 0
n_shots = 0
rand_halt = 0
noise_models = 0
noise_values = 0
shift_threshold_time = 2000
shift_threshold_ball = 1e-3
success_thresh = 50
succ_radius_shift = 10
succes_switch = 5e-3
thresholds = []
switch_episodes = []
curriculum_type = MovingThreshold

[problem]
ham_type = LiH
geometry = Li .0 .0 .0; H .0 .0 2.2
taper = 0
mapping = jordan_wigner

[agent]
batch_size = 1000
memory_size = 20000
neurons = [2000,2000,2000,2000,2000]
dropout = 0.
learning_rate = 0.0001
angles = 0
en_state = 1
agent_type = DeepQNstep
agent_class = DQN_Nstep
n_step = 6
init_net = 0

update_target_net = 500
final_gamma = 0.005
epsilon_decay = 0.99995
epsilon_min = 0.05
epsilon_restart = 1.0


[non_local_opt]

a = 1.707
alpha = 0.6589
c = 0.0279
gamma = 0.0692

maxfev1 = 0
maxfev2 = 0
maxfev3 = 0
beta_1 = 0
beta_2 = 0

global_iters = 1000
method = scipy_each_step
optim_alg = COBYLA
local_size = 8
